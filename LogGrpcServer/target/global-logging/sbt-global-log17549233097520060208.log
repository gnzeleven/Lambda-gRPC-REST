[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\avig1\AppData\Local\Temp\idea4.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\avig1\AppData\Local\Temp\idea4.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 74.6748ms
[debug]       Load.loadUnit: defsScala took 0.224ms
[debug] [Loading] Scanning directory C:\Users\avig1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\avig1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.9971 ms
[debug]           Load.resolveProject(global-plugins) took 37.6486ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\avig1\.sbt\1.0\plugins, plugins: List(<none>))) took 72.6183ms
[debug] [Loading] Done in C:\Users\avig1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.7368ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1954ms
[debug]     Load.loadUnit(file:/C:/Users/avig1/.sbt/1.0/plugins/, ...) took 170.8028ms
[debug]   Load.apply: load took 321.0144ms
[debug]   Load.apply: resolveProjects took 5.0995ms
[debug]   Load.apply: finalTransforms took 44.9568ms
[debug]   Load.apply: config.delegates took 6.378ms
[debug]   Load.apply: Def.make(settings)... took 317.9759ms
[debug]   Load.apply: structureIndex took 81.6153ms
[debug]   Load.apply: mkStreams took 1.7578ms
[info] loading global plugins from C:\Users\avig1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2005.3392ms
[debug]           Load.loadUnit: plugins took 25.843ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory F:\CS441\Lambda-gRPC-REST\LogGrpcServer\project
[debug]             Load.loadUnit: mkEval took 5.1015ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\CS441\Lambda-gRPC-REST\LogGrpcServer\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5936 ms
[info] loading settings for project loggrpcserver-build from scalapb.sbt,idea4.sbt ...
[debug]               Load.resolveProject(loggrpcserver-build) took 2.4381ms
[debug]             Load.loadTransitive: finalizeProject(Project(id loggrpcserver-build, base: F:\CS441\Lambda-gRPC-REST\LogGrpcServer\project, plugins: List(<none>))) took 4.6879ms
[debug] [Loading] Done in F:\CS441\Lambda-gRPC-REST\LogGrpcServer\project, returning: (loggrpcserver-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1877.8594ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6513ms
[debug]         Load.loadUnit(file:/F:/CS441/Lambda-gRPC-REST/LogGrpcServer/project/, ...) took 1908.1736ms
[debug]       Load.apply: load took 1909.1361ms
[debug]       Load.apply: resolveProjects took 0.157ms
[debug]       Load.apply: finalTransforms took 6.1447ms
[debug]       Load.apply: config.delegates took 0.4965ms
[debug]       Load.apply: Def.make(settings)... took 54.6758ms
[debug]       Load.apply: structureIndex took 24.1046ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from F:\CS441\Lambda-gRPC-REST\LogGrpcServer\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3352.2078ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory F:\CS441\Lambda-gRPC-REST\LogGrpcServer
[debug]       Load.loadUnit: mkEval took 0.1741ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\CS441\Lambda-gRPC-REST\LogGrpcServer, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtprotoc.ProtocPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0379 ms
[info] loading settings for project loggrpcserver from build.sbt ...
[debug]         Load.resolveProject(loggrpcserver) took 24.6556ms
[debug]       Load.loadTransitive: finalizeProject(Project(id loggrpcserver, base: F:\CS441\Lambda-gRPC-REST\LogGrpcServer, plugins: List(<none>))) took 27.7537ms
[debug] [Loading] Done in F:\CS441\Lambda-gRPC-REST\LogGrpcServer, returning: (loggrpcserver)
[debug]     Load.loadUnit: loadedProjectsRaw took 1557.7649ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.1541ms
[debug]   Load.loadUnit(file:/F:/CS441/Lambda-gRPC-REST/LogGrpcServer/, ...) took 4922.7854ms
[debug] Load.apply: load took 4924.4134ms
[debug] Load.apply: resolveProjects took 0.1143ms
[debug] Load.apply: finalTransforms took 24.8854ms
[debug] Load.apply: config.delegates took 0.6406ms
[debug] Load.apply: Def.make(settings)... took 91.0091ms
[debug] Load.apply: structureIndex took 26.1083ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to LogGrpcServer (in build file:/F:/CS441/Lambda-gRPC-REST/LogGrpcServer/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 2123 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 2123, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LogGrpcServer (in build file:/F:/CS441/Lambda-gRPC-REST/LogGrpcServer/)
[debug] > Exec(idea-shell, None, None)
